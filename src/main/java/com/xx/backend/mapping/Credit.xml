<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="credit"> 
	
	 <parameterMap type="java.util.HashMap" id="paraMap" />

	<!--获取[职员]列表 -->
	<select id="cridit_page" parameterMap="paraMap" resultType="hashmap">
		<if test="start != null"><![CDATA[select t.*  from ( ]]></if>
		select
		total_credit - bill_amount - pre_bill_amount - remaining_credit as problem_money,
		DATE_FORMAT(touch_date, '%Y-%m-%d %H:%i:%s') as touch_date,
		DATE_FORMAT(current_bill_date_end, '%Y-%m-%d') as current_bill_date_end,
		DATE_FORMAT(current_bill_pay_date, '%Y-%m-%d') as current_bill_pay_date,
		case when current_bill_date is null then DATE_FORMAT(now(), '%Y-%m-%d') else DATE_FORMAT(current_bill_date, '%Y-%m-%d') end as current_bill_date,
		TIMESTAMPDIFF(DAY,now(),current_bill_date)+ case when bill_repay_day_count is null then 0 else  bill_repay_day_count end as fee_free_day_count,
		DATE_FORMAT(now(),'%d') as now_day,
		t.*
		from wj_bank t
		<if test="filter != null">
			<where>${filter}</where>
		</if>
		<if test="sort != null">ORDER BY ${sort} ${dir}</if>
		<if test="sort == null">ORDER BY account_type ,free_day_count desc </if>
		<if test="start != null"> <![CDATA[) t limit ${start},${limit}]]></if>
	</select>

	<!--获取[职员]列表总数 -->
	<select id="cridit_page_count" parameterMap="paraMap" resultType="int">
		select count(1) from wj_bank a
		<if test="filter != null">
			<where>${filter}</where>
		</if>
	</select>
	
	<!--获取[职员]列表 -->
	<select id="cridit_page_detail" parameterMap="paraMap" resultType="hashmap">
		<if test="start != null"><![CDATA[select t.*  from ( ]]></if>
		select
		id,
		cancel,
		safty_cost_fee,
		DATE_FORMAT(cancel_at, '%Y-%m-%d %H:%i:%s') as cancel_at,
		DATE_FORMAT(cr_date, '%Y-%m-%d %H:%i:%s') as cr_date,amount,cardno,remark,bank
		from wj_record
		<include refid="cridit_page_detail_where"/>
<!-- 		<if test="sort != null">ORDER BY ${sort} ${dir}</if> -->
<!-- 		<if test="sort == null">ORDER BY cancel, cr_date desc</if> -->
			ORDER BY  cr_date DESC ,cancel 
		<if test="start != null"> <![CDATA[) t limit ${start},${limit}]]></if>
	</select>

	<!--获取[职员]列表总数 -->
	<select id="cridit_page_detail_count" parameterMap="paraMap" resultType="int">
		select count(1) from wj_record
		<include refid="cridit_page_detail_where"/>
	</select>
	<!--删除交易记录 -->
	<update id="delete_water_bank_cancel_record" parameterMap="paraMap" >
		update wj_record set  del_flag='1'  where id = #{id}
	</update>
	<update id="updateRecord" parameterMap="paraMap" >
		update wj_record set  
		up_date = now()
		<if test="my_single_cal2_info != null"> , cr_date = #{my_single_cal2_info} 	</if>
		<if test="detial_amount != null"> , amount = #{detial_amount} 	</if>
		<if test="editable-select != null"> , remark = #{editable-select} 	</if>
		 where id = #{id}
	</update>
	<!--次日到帐金额到帐 -->
	<update id="water_arrival" parameterMap="paraMap" >
		update wj_financial_information  set bank_amount = bank_amount + next_day_arrival  , next_day_arrival = 0
	</update>
	<!--次日到帐金额到帐 -->
	<update id="cash" parameterMap="paraMap" >
		update wj_financial_information  set bank_amount = bank_amount - ${cash_amount}
	</update>
	<!--支付宝到帐 -->
	<update id="alipay" parameterMap="paraMap" >
		update wj_financial_information  
		set cash = cash - ${amount}
	</update>
	<!--删除交易记录 -->
	<update id="repayment" parameterMap="paraMap" >
		update wj_bank set  bill_amount=#{bill_amount},  
		pre_bill_amount=#{pre_bill_amount},
		remaining_credit = #{remaining_credit}
		where code = #{repayment_bank}
	</update>
	
	<sql id="cridit_page_detail_where">
		where 1=1
		    and del_flag='0'
		    and cancel='0'
		<if test="target != null">
			and bank = #{target}
		</if>
		<if test="s_date != null">
			and DATE_FORMAT(cr_date,'%m/%d/%Y') >=  DATE_FORMAT(str_to_date(#{s_date}, '%m/%d/%Y'), '%m/%d/%Y') 
		</if>
		<if test="e_date != null">
		and  DATE_FORMAT(str_to_date(#{e_date}, '%m/%d/%Y'), '%m/%d/%Y') >= DATE_FORMAT(cr_date,'%m/%d/%Y')  
		</if>
	</sql>
	
	<insert id="cridit_insert" parameterMap="paraMap">
		insert into wj_record (
		cr_date,
		amount,
		type,
		remark,
		safty_cost_fee,
		cardno,
		bank)
		values (
		#{now},
		#{amount},
		#{type},
		#{remark},
		#{safty_cost_fee},
		#{cardno},
		#{bank}
		)
		<selectKey resultType="int" order="AFTER" keyProperty="ID"><![CDATA[SELECT LAST_INSERT_ID()]]></selectKey>
	</insert>
	<insert id="addRemark" parameterMap="paraMap">
		insert into wj_remarks (
		name,
		type,
		shortcut)
		values (
		#{name},
		#{type},
		#{shortcut}
		)
		<selectKey resultType="int" order="AFTER" keyProperty="ID"><![CDATA[SELECT LAST_INSERT_ID()]]></selectKey>
	</insert>
	
	<update id="pay" parameterType="hashmap">
		update wj_credit
		set
			remaining_credit = remaining_credit - #{amount},
			remaining_credit_percentage = ROUND(remaining_credit/total_credit*100,1)
		where 1=1  
		and no = #{cardno}
	</update>
	
	
	<update id="wj_financial_information_next_day_arrival" parameterType="hashmap">
		update wj_financial_information
		set
			next_day_arrival = next_day_arrival + #{amount} -#{safty_cost_fee}
		where 1=1  
	</update>
	<update id="water_bank" parameterType="hashmap">
		update wj_bank
		set
			remaining_credit = remaining_credit - #{amount},
			pre_bill_amount = pre_bill_amount+#{amount},
			today_trade_amount = today_trade_amount +#{amount},
			today_trade_count = today_trade_count +1,
			touch_date = now(),
			remaining_credit_percentage = ROUND(remaining_credit/total_credit*100,1)
		where 1=1  
		and code = #{bank}
	</update>
	<update id="water_bank_cancel" parameterType="hashmap">
		update wj_bank
		set
			remaining_credit = remaining_credit + #{amount},
			pre_bill_amount = pre_bill_amount-#{amount},
			remaining_credit_percentage = ROUND(remaining_credit/total_credit*100,1)
		where 1=1  
		and code = #{bank}
	</update>
	<update id="water_bank_cancel_record" parameterType="hashmap">
		update wj_record
		set
			cancel = '1',
			cancel_at = now()
		where 1=1  
		and id = #{id}
	</update>
	
	<update id="setBillInfo" parameterType="hashmap">
		update wj_bank
		set
			bill_amount = #{bill_amount},
			remaining_credit = #{remaining_credit},
			pre_bill_amount = #{pre_bill_amount}
		where 1=1  
		and code = #{current_bank}
	</update>
	
	<update id="pay_bank" parameterType="hashmap">
		update wj_bank
		set
			remaining_credit = remaining_credit - #{amount},
			touch_date = now(),
			remaining_credit_percentage = ROUND(remaining_credit/total_credit*100,1)
		where 1=1  
		and code = (select distinct(type) from wj_credit where no=#{cardno})
	</update>
	
	<update id="setSummaryInfo" parameterType="hashmap">
		update wj_financial_information
		set
			next_day_arrival =  #{next_day_arrival},
			bank_amount = #{bank_amount},
			
			debt = #{debt},
			financial_product_amount = #{financial_product_amount},
			financial_product_amount_income = #{financial_product_amount_income},
			cash = #{cash},
			travel_expenses = #{travel_expenses},
			instalment_amount = #{instalment_amount},
			income_and_expenditure = #{income_and_expenditure}
			
		where 1=1  
		
	</update>
	
	<select id="getCredit_List" parameterMap="paraMap" resultType="hashmap">
		SELECT * FROM wj_credit where type = #{bank} ORDER BY temporary_credit desc
	</select>
	
	<select id="checkRecentRecord" parameterMap="paraMap" resultType="hashmap">
		select
			DATE_FORMAT( t.cr_date,'%Y-%m-%d %h:%i:%s') as cr_date,t.*
		from
			wj_record t
			where
			    1=1
<!-- 				and cr_date > DATE_ADD(now(), INTERVAL -1 MONTH) -->
				and remark = #{remark}
				and bank = #{bank}
				order by cr_date desc
	</select>
	<select id="selectRemark" parameterMap="paraMap" resultType="hashmap">
		SELECT * FROM wj_remarks
		where 1=1 
		 <if test="remark != null">
		 	and  name = #{remark}
		 </if>
	</select>
	<select id="select_one_wj_record_by_id" parameterMap="paraMap" resultType="hashmap">
		SELECT * FROM wj_record where id = #{id}
	</select>
	
	<select id="summaryInformation" parameterMap="paraMap" resultType="hashmap">
		SELECT    next_day_arrival,
				  bank_amount,
				  debt ,
				  financial_product_amount,
				  financial_product_amount_income ,
				  financial_product_amount + financial_product_amount_income  as  total_product_amount_income,
				  cash ,
				  travel_expenses ,
				  instalment_amount ,
				  income_and_expenditure ,
				  total_bill_amount ,
				  unposted_total_bill_amount ,
				  total_bill_amount + unposted_total_bill_amount as both_bill_amount 
		 FROM wj_financial_information
	</select>
	
	<update id="creditOtherCard" parameterType="hashmap">
		update wj_credit
		set
			remaining_credit = case when remaining_credit >= #{remaining_credit_main} then #{remaining_credit_main} else remaining_credit end,
			remaining_credit_percentage = ROUND(remaining_credit/total_credit*100,1)
		where 1=1  
		and no = #{no}
	</update>
	<select id="getCreditInfos" parameterMap="paraMap" resultType="hashmap">
		SELECT t.*,b.name,b.short_name FROM wj_credit t ,wj_bank b where t.type = b.code ORDER BY type desc
	</select>
	<select id="getRemarks" parameterMap="paraMap" resultType="hashmap">
		select * from wj_remarks
	</select>
	
	<select id="getAllCreditInfos" parameterMap="paraMap" resultType="hashmap">
		SELECT DATE_FORMAT(now(),'%d') as now_day,t.* FROM wj_bank t
		where 1=1 
		 <if test="repayment_bank != null">
		 	and code = #{repayment_bank}
		 </if>
		 <if test="repayment_banks != null">
		 	and code in ( ${repayment_banks})
		 </if>
		 and code like  "%YH"
<!-- 		 and isNextMonth = '0' -->
	</select>
	<update id="upate_credit_bill_date" parameterType="hashmap">
		update wb.wj_bank set 
			next_bill_date = #{next_bill_date},
			bill_amount_remaining = #{bill_amount_remaining},
			bill_amount_edit = #{bill_amount_edit},
			bill_gen_count = #{bill_gen_count},
			util_bill_pay_date = #{util_bill_pay_date},
			next_bill_date_count = #{next_bill_date_count},
			free_day_count = #{free_day_count},
			pre_bill_amount = #{pre_bill_amount},
			bill_amount = #{bill_amount},
			current_bill_year = #{current_bill_year},
			current_bill_month = #{current_bill_month},
			current_bill_date_start= DATE_FORMAT(#{current_bill_date_start}, '%Y-%m-%d %H:%i:%s'),
			current_bill_date_end= DATE_FORMAT(#{current_bill_date_end}, '%Y-%m-%d %H:%i:%s'),
			current_bill_date = DATE_FORMAT(#{current_bill_date}, '%Y-%m-%d %H:%i:%s'),
			current_bill_pay_date = DATE_FORMAT(#{current_bill_pay_date}, '%Y-%m-%d %H:%i:%s')
		 where id =#{id}
	</update>
	

	<update id="update_summary_info" parameterType="hashmap">
		update wj_financial_information 
		set total_bill_amount = (select sum(bill_amount) from wj_bank) ,
			unposted_total_bill_amount = (select sum(pre_bill_amount) from wj_bank) ,
	        income_and_expenditure= next_day_arrival+ bank_amount + debt +financial_product_amount + financial_product_amount_income + cash + travel_expenses - instalment_amount - total_bill_amount - unposted_total_bill_amount
	    where id>=0
	</update>
	
	<update id="update_touch_date" parameterType="hashmap">
		update wj_bank 
		set touch_date = now()
	    where id= #{id}
	</update>
	

</mapper>
