<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="baseFrame_Cridit"> 
	
	 <parameterMap type="java.util.HashMap" id="paraMap" />

	<!--获取[职员]列表 -->
	<select id="cridit_page" parameterMap="paraMap" resultType="hashmap">
		<if test="start != null"><![CDATA[select t.*  from ( ]]></if>
		select
		code,
		DATE_FORMAT(touch_date, '%Y-%m-%d %H:%i:%s') as touch_date,
		case when bill_date is null then DATE_FORMAT(now(), '%Y-%m-%d') else DATE_FORMAT(bill_date, '%Y-%m-%d') end as bill_date,
		TIMESTAMPDIFF(DAY,now(),bill_date)+ case when bill_repay_day_count is null then 0 else  bill_repay_day_count end as fee_free_day_count,
		total_credit - bill_amount - pre_bill_amount - remaining_credit as problem_money, 
		name,
		inherent_credit,
		temporary_credit,
		total_credit,
		remaining_credit,
		remaining_credit_percentage,
		bill_amount,
		pre_bill_amount,
		month_bill_date,
		count
		from wj_bank
		<if test="filter != null">
			<where>${filter}</where>
		</if>
		<if test="sort != null">ORDER BY ${sort} ${dir}</if>
		<if test="sort == null">ORDER BY ID </if>
		<if test="start != null"> <![CDATA[) t limit ${start},${limit}]]></if>
	</select>

	<!--获取[职员]列表总数 -->
	<select id="cridit_page_count" parameterMap="paraMap" resultType="int">
		select count(1) from wj_bank a
		<if test="filter != null">
			<where>${filter}</where>
		</if>
	</select>
	
	<!--获取[职员]列表 -->
	<select id="cridit_page_detail" parameterMap="paraMap" resultType="hashmap">
		<if test="start != null"><![CDATA[select t.*  from ( ]]></if>
		select
		id,
		cancel,
		DATE_FORMAT(cancel_at, '%Y-%m-%d %H:%i:%s') as cancel_at,
		DATE_FORMAT(cr_date, '%Y-%m-%d %H:%i:%s') as cr_date,amount,cardno,remark,bank
		from wj_record
		<include refid="cridit_page_detail_where"/>
		<if test="sort != null">ORDER BY ${sort} ${dir}</if>
		<if test="sort == null">ORDER BY cancel, cr_date</if>
		<if test="start != null"> <![CDATA[) t limit ${start},${limit}]]></if>
	</select>

	<!--获取[职员]列表总数 -->
	<select id="cridit_page_detail_count" parameterMap="paraMap" resultType="int">
		select count(1) from wj_record
		<include refid="cridit_page_detail_where"/>
	</select>
	
	<sql id="cridit_page_detail_where">
		where 1=1
		<if test="target != null">
			and bank = #{target}
		</if>
	</sql>
	
	<insert id="cridit_insert" parameterMap="paraMap">
		insert into wj_record (
		cr_date,
		amount,
		type,
		remark,
		safty_cost_fee,
		cardno,
		bank)
		values (
		#{now},
		#{amount},
		#{type},
		#{remark},
		#{safty_cost_fee},
		#{cardno},
		#{bank}
		)
		<selectKey resultType="int" order="AFTER" keyProperty="ID"><![CDATA[SELECT LAST_INSERT_ID()]]></selectKey>
	</insert>
	
	<update id="pay" parameterType="hashmap">
		update wj_credit
		set
			remaining_credit = remaining_credit - #{amount},
			remaining_credit_percentage = ROUND(remaining_credit/total_credit*100,1)
		where 1=1  
		and no = #{cardno}
	</update>
	
	
	<update id="water_bank" parameterType="hashmap">
		update wj_bank
		set
			remaining_credit = remaining_credit - #{amount},
			pre_bill_amount = pre_bill_amount+#{amount},
			remaining_credit_percentage = ROUND(remaining_credit/total_credit*100,1)
		where 1=1  
		and code = #{bank}
	</update>
	<update id="water_bank_cancel" parameterType="hashmap">
		update wj_bank
		set
			remaining_credit = remaining_credit + #{amount},
			pre_bill_amount = pre_bill_amount-#{amount},
			remaining_credit_percentage = ROUND(remaining_credit/total_credit*100,1)
		where 1=1  
		and code = #{bank}
	</update>
	<update id="water_bank_cancel_record" parameterType="hashmap">
		update wj_record
		set
			cancel = '1',
			cancel_at = now()
		where 1=1  
		and id = #{id}
	</update>
	
	<update id="setBillInfo" parameterType="hashmap">
		update wj_bank
		set
			bill_amount = #{bill_amount},
			remaining_credit = #{remaining_credit},
			pre_bill_amount = #{pre_bill_amount}
		where 1=1  
		and code = #{current_bank}
	</update>
	
	<update id="pay_bank" parameterType="hashmap">
		update wj_bank
		set
			remaining_credit = remaining_credit - #{amount},
			touch_date = now(),
			remaining_credit_percentage = ROUND(remaining_credit/total_credit*100,1)
		where 1=1  
		and code = (select distinct(type) from wj_credit where no=#{cardno})
	</update>
	
	<update id="setSummaryInfo" parameterType="hashmap">
		update wj_financial_information
		set
			next_day_arrival =  #{next_day_arrival},
			bank_amount = #{bank_amount},
			
			debt = #{debt},
			financial_product_amount = #{financial_product_amount},
			financial_product_amount_income = #{financial_product_amount_income},
			cash = #{cash},
			travel_expenses = #{travel_expenses},
			instalment_amount = #{instalment_amount},
			income_and_expenditure = #{income_and_expenditure}
			
		where 1=1  
		
	</update>
	
	<select id="getCredit_List" parameterMap="paraMap" resultType="hashmap">
		SELECT * FROM wj_credit where type = #{bank} ORDER BY temporary_credit desc
	</select>
	<select id="select_one_wj_record_by_id" parameterMap="paraMap" resultType="hashmap">
		SELECT * FROM wj_record where id = #{id}
	</select>
	
	<select id="summaryInformation" parameterMap="paraMap" resultType="hashmap">
		SELECT    next_day_arrival,
				  bank_amount,
				  debt ,
				  financial_product_amount,
				  financial_product_amount_income ,
				  financial_product_amount + financial_product_amount_income  as  total_product_amount_income,
				  cash ,
				  travel_expenses ,
				  instalment_amount ,
				  income_and_expenditure ,
				  total_bill_amount ,
				  unposted_total_bill_amount ,
				  total_bill_amount + unposted_total_bill_amount as both_bill_amount 
		 FROM wj_financial_information
	</select>
	
	<update id="creditOtherCard" parameterType="hashmap">
		update wj_credit
		set
			remaining_credit = case when remaining_credit >= #{remaining_credit_main} then #{remaining_credit_main} else remaining_credit end,
			remaining_credit_percentage = ROUND(remaining_credit/total_credit*100,1)
		where 1=1  
		and no = #{no}
	</update>
	<select id="getCreditInfos" parameterMap="paraMap" resultType="hashmap">
		SELECT t.*,b.name,b.short_name FROM wj_credit t ,wj_bank b where t.type = b.code ORDER BY type desc
	</select>
	
	<select id="getAllCreditInfos" parameterMap="paraMap" resultType="hashmap">
		SELECT t.* FROM wj_bank t 
<!-- 		where code like '%YH'  -->
	</select>
	<update id="upate_credit_bill_date" parameterType="hashmap">
		update wb.wj_bank set 
			bill_date = DATE_FORMAT(#{bill_date}, '%Y-%m-%d %H:%i:%s'),
			bill_repay_date = DATE_FORMAT(#{bill_repay_date}, '%Y-%m-%d %H:%i:%s')
		 where id =#{id}
	</update>
	

	<update id="update_summary_info" parameterType="hashmap">
		update wj_financial_information 
		set total_bill_amount = (select sum(bill_amount) from wj_bank) ,
			unposted_total_bill_amount = (select sum(pre_bill_amount) from wj_bank) ,
	        income_and_expenditure= next_day_arrival+ bank_amount + debt +financial_product_amount + financial_product_amount_income + cash + travel_expenses - instalment_amount - total_bill_amount - unposted_total_bill_amount
	    where id>=0
	</update>
	

</mapper>
